env:
  global:
    - LC_CTYPE=en_US.UTF-8
    
branches:
  only:
    - master

matrix:
  include:
    - os: osx
      osx_image: xcode12.2
      language: objective-c
      env:
        - JOB=CocoaPods
      script:
        - set -o pipefail
        - pod lib lint
    - os: osx
      osx_image: xcode12.2
      language: objective-c
      env:
        - JOB=iPhone
      script:
        - set -o pipefail
        - xcodebuild build-for-testing test-without-building -workspace JSONRPCKit.xcworkspace -scheme JSONRPCKit -sdk iphonesimulator -destination "name=iPhone 12" | xcpretty -c
    - os: osx
      osx_image: xcode12.2
      language: objective-c
      env:
        - JOB=AppleTV
      script:
        - set -o pipefail
        - xcodebuild build-for-testing test-without-building -workspace JSONRPCKit.xcworkspace -scheme JSONRPCKit -sdk appletvsimulator -destination "name=Apple TV" | xcpretty -c
    - os: osx
      osx_image: xcode12.2
      language: objective-c
      env:
        - JOB=watchOS
      script:
        - set -o pipefail
        - xcodebuild build -workspace JSONRPCKit.xcworkspace -scheme JSONRPCKit -sdk watchsimulator | xcpretty -c
    - os: osx
      osx_image: xcode12.2
      language: objective-c
      env:
        - JOB=macOS
      script:
        - set -o pipefail
        - xcodebuild build-for-testing test-without-building -workspace JSONRPCKit.xcworkspace -scheme JSONRPCKit | xcpretty -c
    - os: osx
      osx_image: xcode12.2
      language: generic
      env:
        - JOB=SPM
      script:
        - swift --version
        - swift build
        - swift test
    - os: linux
      language: generic
      env:
        - JOB=Linux
      script:
        - swiftenv versions
        - swift --version
        - swift build
        - swift test
      sudo: required
      dist: bionic
      install:
        - eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"

notifications:
  email: false
